# --------------------------------------------------------------------------------------------------
# --------------------------------- MELD :: Dense-Layer Flattener ----------------------------------
# --------------------------------------------------------------------------------------------------
import torch.nn as networks
import torch


# --------------------------------------------------------------------------------------------------
# --------------------------------- CLASS :: Dense-Layer Flattener ---------------------------------
# --------------------------------------------------------------------------------------------------
class Flattener(networks.Module):

    # ----------------------------------------------------------------------------------------------
    # -------------------------------------- CLASS :: Encoder --------------------------------------
    # ----------------------------------------------------------------------------------------------
    def __init__(self) -> None:
        super(Flattener, self).__init__()

        flattened = 128 * 128 * 2048

        self.flatten = nn.Flatten()
        self.flat01  = nn.Linear(flattened, 2048)
        self.flat02  = nn.Linear(2048, 1024)
        self.flat03  = nn.Linear(1024, 512)
        self.flat04  = nn.Linear(512, 256)
